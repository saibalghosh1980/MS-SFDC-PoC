package com.cts.ms.location.bl;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import com.cts.ms.location.bo.LocationConfigBO;
import com.cts.ms.location.dao.Locationconfig;
import com.cts.ms.location.repository.LocationConfigRepository;
import com.cts.util.ExceptionWrapper;

@Service("springManagedLocationConfigBL")
public class LocationConfigBL {

	@Autowired
	@Qualifier("springManagedLocationConfigRepository")
	private LocationConfigRepository locationConfigRepository;

	public ArrayList<LocationConfigBO> getAllLocationConfig() throws Exception {
		ArrayList<LocationConfigBO> allConfigs = new ArrayList<LocationConfigBO>();
		try {
			locationConfigRepository.findAll()
					.forEach(l -> allConfigs.add(new LocationConfigBO(l.getId(), l.getStatus())));
		} catch (Exception ex) {
			ex.printStackTrace();
			throw ex;
		}
		return allConfigs;
	}

	public LocationConfigBO getLocationConfigByLocationId(String id) throws Exception {
		try {
			if (locationConfigRepository.exists(id)) {
				Locationconfig locationconfig = locationConfigRepository.findOne(id);
				return new LocationConfigBO(locationconfig.getId(), locationconfig.getStatus());
			} else
				return null;

		} catch (Exception ex) {
			ex.printStackTrace();
			throw ex;
		}
	}
	
	public void addLocationConfig(LocationConfigBO locationConfigBO) throws Exception{
		try
		{
			
		}
		catch(Exception ex)
		{
			throw new ExceptionWrapper(ex);
		}
	}

}
