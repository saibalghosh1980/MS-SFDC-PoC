package com.cts.ms.enrollment.scheduler;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.cloud.stream.messaging.Source;
import org.springframework.context.annotation.Configuration;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;

import com.cts.ms.enrollment.bl.EnrollmentBL;
import com.cts.ms.enrollment.bo.EnrollmentBO;
import com.cts.ms.enrollment.util.MessagePublisher;
import com.cts.ms.events.enrollment.EnrollmentPublishEvent;
import com.cts.util.ExceptionWrapper;
import com.cts.util.LoggingHelpUtil;

@Configuration
@EnableScheduling
public class EnrollmentScheduler {

	@Autowired
	@Qualifier("springManagedMessagePublisher")
	private MessagePublisher messagepublisher;

	@Autowired
	@Qualifier("springManagedEnrollmentBL")
	private EnrollmentBL enrollmentBL;

	@Scheduled(fixedRate = 3600000)
	public void runEnrollmentDataScheduler() {

		try {
			LoggingHelpUtil.printDebug(
					"----------------------------STARTED SCHEDULER----------------------------------------");
			List<EnrollmentBO> allEnrollments = enrollmentBL.getEnrollmentDataForProcessing();
			LoggingHelpUtil.printDebug("--------------" + allEnrollments.size());
			allEnrollments.forEach(enrollment -> {
				messagepublisher.publishMessage(new EnrollmentPublishEvent(enrollment));
				enrollmentBL.updateEnrollment(enrollment);
			});

		} catch (Exception ex) {
			new ExceptionWrapper(ex);
		}
	}

}
